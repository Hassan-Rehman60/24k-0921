#include <iostream>
#include <string>
using namespace std;

class Character 
{
protected:
    int characterID;
    string name;
    int level;
    int healthPoints;
    string weaponType;

public:
    Character(int id, string n, int lvl, int hp, string weapon) 
        : characterID(id), name(n), level(lvl), healthPoints(hp), weaponType(weapon) {}

    virtual void attack() 
    { 
        cout << name << " attacks with " << weaponType << "!" << endl; 
    }

    virtual void defend() 
    { 
        cout << name << " defends heroically!" << endl; 
    }

    virtual void displayStats() 
    { 
        cout << "ID: " << characterID 
             << ", Name: " << name 
             << ", Level: " << level 
             << ", HP: " << healthPoints 
             << ", Weapon: " << weaponType << endl; 
    }
};

class Warrior : public Character 
{
    int armorStrength;
    int meleeDamage;

public:
    Warrior(int id, string n, int lvl, int hp, string weapon, int armor, int dmg) 
        : Character(id, n, lvl, hp, weapon), armorStrength(armor), meleeDamage(dmg) {}

    void attack() override 
    { 
        cout << name << " swings " << weaponType << " with " << meleeDamage << " damage!" << endl; 
    }
};

class Mage : public Character 
{
    int manaPoints;
    int spellPower;

public:
    Mage(int id, string n, int lvl, int hp, string weapon, int mana, int power) 
        : Character(id, n, lvl, hp, weapon), manaPoints(mana), spellPower(power) {}

    void defend() override 
    { 
        cout << name << " casts a magical barrier!" << endl; 
    }
};

class Archer : public Character 
{
    int arrowCount;
    int rangedAccuracy;

public:
    Archer(int id, string n, int lvl, int hp, string weapon, int arrows, int accuracy) 
        : Character(id, n, lvl, hp, weapon), arrowCount(arrows), rangedAccuracy(accuracy) {}

    void attack() override 
    { 
        cout << name << " shoots an arrow with " << rangedAccuracy << "% accuracy!" << endl; 
    }
};

class Rogue : public Character 
{
    int stealthLevel;
    int agility;

public:
    Rogue(int id, string n, int lvl, int hp, string weapon, int stealth, int agil) 
        : Character(id, n, lvl, hp, weapon), stealthLevel(stealth), agility(agil) {}

    void displayStats() override 
    { 
        cout << "Rogue " << name 
             << " has agility " << agility 
             << " and stealth level " << stealthLevel << endl; 
    }
};

int main() 
{
    Warrior w1(1, "Captain America", 10, 100, "Shield", 80, 25);
    Mage m1(2, "Doctor Strange", 12, 80, "Magic Staff", 150, 50);
    Archer a1(3, "Hawkeye", 15, 90, "Bow & Arrow", 40, 95);
    Rogue r1(4, "Batman", 18, 85, "Batarang", 90, 100);

    w1.attack();
    m1.defend();
    a1.attack();
    r1.displayStats();

    return 0;
}
