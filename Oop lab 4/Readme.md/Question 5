#include <iostream> #include <string> using namespace std;

class Car { private: string Brand; string Model; float RentalPrice; bool Availability; int rentedDays; float totalRevenue; string carID;

public: Car() : carID("0000"), Brand("Unknown"), Model("Generic"), RentalPrice(0.0), Availability(true), rentedDays(0), totalRevenue(0.0) {}

Car(string ID, string BrandName, string ModelName, float RentPrice, bool Avail)
    : carID(ID), Brand(BrandName), Model(ModelName), RentalPrice(RentPrice), Availability(Avail), rentedDays(0), totalRevenue(0.0) {}

Car(const Car &c) : carID(c.carID), Brand(c.Brand), Model(c.Model), RentalPrice(c.RentalPrice), Availability(c.Availability), rentedDays(c.rentedDays), totalRevenue(c.totalRevenue) {}

~Car() {
    cout << "Deleting Vehicle: " << Brand << " " << Model << " | ID: " << carID << endl;
}

void UpdateCarDetails(string BrandName, string ModelName, float RentPrice) {
    Brand = BrandName;
    Model = ModelName;
    RentalPrice = RentPrice;
}

void RentCar(int days) {
    if (Availability) {
        Availability = false;
        rentedDays += days;
        totalRevenue += RentalPrice * days;
        cout << "Car rented for " << days << " days.\n" << endl;
    } else {
        cout << "This car is currently not available.\n" << endl;
    }
}

void displayCarInfo() {
    cout << "\nCar ID: " << carID << endl;
    cout << "Brand: " << Brand << endl;
    cout << "Model: " << Model << endl;
    cout << "Rental Rate per Day: $" << RentalPrice << endl;
    cout << "Availability: " << (Availability ? "Available" : "Rented") << endl;
}

void displayFullCarInfo() {
    displayCarInfo();
    cout << "Total Rental Days: " << rentedDays << endl;
    cout << "Total Revenue Earned: $" << totalRevenue << endl;
}

};

int main() { Car primaryCar("X789", "Ford", "Mustang", 75.0, true); cout << "Initial Car Details:" << endl; primaryCar.displayFullCarInfo();

primaryCar.RentCar(5);

Car duplicateCar = primaryCar;

primaryCar.UpdateCarDetails("Nissan", "Altima", 90.0);
cout << "\nUpdated Car Details:" << endl;
primaryCar.displayFullCarInfo();

cout << "\nCopied Car Details:" << endl;
duplicateCar.displayFullCarInfo();

return 0;

}

