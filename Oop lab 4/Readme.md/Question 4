#include <iostream> #include <stdbool.h> #include <string> using namespace std;

class Car { private: string Brand; string Model; float RentalPrice; bool Availability; int rentedDays; float totalRevenue;

public: Car() { Brand = "unknown"; Model = "Generic"; RentalPrice = 0.0; Availability = true; rentedDays = 0; totalRevenue = 0.0; }

Car(string BrandName, string ModelName, float RentPrice, bool Avail) {
    Brand = BrandName;
    Model = ModelName;
    RentalPrice = RentPrice;
    Availability = Avail;
    rentedDays = 0; 
    totalRevenue = 0.0; 
}

Car(const Car &c) {
    Brand = c.Brand;
    Model = c.Model;
    RentalPrice = c.RentalPrice;
    Availability = c.Availability;
    rentedDays = c.rentedDays; 
    totalRevenue = c.totalRevenue; 
}

~Car() {
    cout << "Deleting Vehicle: " << Brand << " " << Model << endl;
}

void UpdateCarDetails(string BrandName, string ModelName, float RentPrice) {
    Brand = BrandName;
    Model = ModelName;
    RentalPrice = RentPrice;
}

void RentCar(int days) { 
    if (Availability) {
        Availability = false; 
        rentedDays += days; 
        totalRevenue += this->RentalPrice * days; 
        cout << "Car has been rented for " << days << " days.\n" << endl;
    } else {
        cout << "This car is currently unavailable for rent.\n" << endl;
    }
}

void displayCarInfo() {
    cout << "\nCar Brand: " << Brand << endl;
    cout << "Car Model: " << Model << endl;
    cout << "Daily Rental Rate: $" << RentalPrice << endl;
    cout << "Current Status: " << (Availability ? "Available" : "Rented") << endl;
    cout << "Total Revenue Earned: $" << totalRevenue << endl;
}

};

int main() { Car primaryCar("Ford", "Mustang", 75.0, true); cout << "Initial Car Details:" << endl; primaryCar.displayCarInfo();

primaryCar.RentCar(5);
Car duplicateCar = primaryCar;

primaryCar.UpdateCarDetails("Nissan", "Altima", 90.0);
cout << "\nUpdated Car Details:" << endl;
primaryCar.displayCarInfo();

cout << "\nCopied Car Details:" << endl;
duplicateCar.displayCarInfo();

return 0;

}

